// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id    @unique @default(uuid())
  userName  String     @unique
  firstName String
  lastName  String
  password  String
  email     String     @unique
  chat      Chat[]
  messages Message []
  group Group[]
  socketId SocketId []
  // owner Owner []
}

// model UserChat {
//   id     String @unique @default(uuid())
//   user   User   @relation(fields: [userId], references: [id])
//   userId String
//   chat   Chat   @relation(fields: [chatId], references: [id])
//   chatId String
//   @@id([userId,chatId])
// }

model Chat {
  id    String  @id   @unique @default(uuid())
  users User[] 
  messages  Message []
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Message {
  id   String     @unique @default(uuid())
  sender User? @relation(fields: [userId], references: [id])
  userId String?
  chat Chat  @relation(fields: [chatId], references: [id])
  chatId String
  group Group?  @relation(fields: [groupId], references: [id])
  groupId String?
  createdAt DateTime @default(now())
  content String
}

// model UserGroup {
//   id   String     @unique @default(uuid())
//   user User @relation(fields: [userId],references: [id])
//   userId String
//   group Group @relation(fields: [groupId],references: [id])  
//   groupId String
//   isOwner Boolean @default(false)
//   isAdmin Boolean @default(false)
// }

model Group {
  id   String  @id   @unique @default(uuid())
  members User []
  messages Message []
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
  // owner Owner []
}

model SocketId {
  id String @id @unique
  user User @relation(fields: [userId],references: [id])
  userId String
}

// model Owner {
//   id   String     @unique @default(uuid())
//   user User @relation(fields: [ownerId],references: [id])
//   ownerId String
//   group Group @relation(fields: [groupId],references: [id])  
//   groupId String
// }