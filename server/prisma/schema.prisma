// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id    @unique @default(uuid())
  userName  String     @unique
  firstName String
  lastName  String
  password  String
  email     String     @unique
  socketId SocketId []
  contacts User [] @relation("contacts")
  contactedbBy User [] @relation("contacts")
  chat            Chat[]
  messages        Message[]
  groupmember     Group[]   @relation("member")
  owner           Group[]   @relation("owner")
  admin           Group[]   @relation("admin")
  groups           Group[]   @relation("user")
}

model Chat {
  id    String  @id   @unique @default(uuid())
  users User[] 
  messages  Message []
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Message {
  id   String     @unique @default(uuid())
  sender User? @relation(fields: [userId], references: [id])
  userId String?
  chat Chat?  @relation(fields: [chatId], references: [id])
  chatId String
  group Group?  @relation(fields: [groupId], references: [id])
  groupId String?
  createdAt DateTime @default(now())
  content String
}

// model UserGroup {
//   id   String     @unique @default(uuid())
//   user User @relation(fields: [userId],references: [id])
//   userId String
//   group Group @relation(fields: [groupId],references: [id])  
//   groupId String
//   isOwner Boolean @default(false)
//   isAdmin Boolean @default(false)
// }


model SocketId {
  id String @id @unique
  user User @relation(fields: [userId],references: [id])
  userId String
}


model Group {
  id        String    @id @unique @default(uuid())
  members   User[]    @relation("member")
  messages  Message[]
  user      User[]    @relation("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  owner     User      @relation("owner", fields: [ownerId], references: [id])
  ownerId   String
  admins    User[]    @relation("admin")
  image     String
  name      String
  type      String
  password  String?
}
